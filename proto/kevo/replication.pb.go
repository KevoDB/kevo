// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: proto/kevo/replication.proto

package kevo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Replication status enum
type ReplicaRole int32

const (
	ReplicaRole_PRIMARY   ReplicaRole = 0
	ReplicaRole_REPLICA   ReplicaRole = 1
	ReplicaRole_READ_ONLY ReplicaRole = 2
)

// Enum value maps for ReplicaRole.
var (
	ReplicaRole_name = map[int32]string{
		0: "PRIMARY",
		1: "REPLICA",
		2: "READ_ONLY",
	}
	ReplicaRole_value = map[string]int32{
		"PRIMARY":   0,
		"REPLICA":   1,
		"READ_ONLY": 2,
	}
)

func (x ReplicaRole) Enum() *ReplicaRole {
	p := new(ReplicaRole)
	*p = x
	return p
}

func (x ReplicaRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicaRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_kevo_replication_proto_enumTypes[0].Descriptor()
}

func (ReplicaRole) Type() protoreflect.EnumType {
	return &file_proto_kevo_replication_proto_enumTypes[0]
}

func (x ReplicaRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicaRole.Descriptor instead.
func (ReplicaRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{0}
}

type ReplicaStatus int32

const (
	ReplicaStatus_CONNECTING    ReplicaStatus = 0
	ReplicaStatus_SYNCING       ReplicaStatus = 1
	ReplicaStatus_BOOTSTRAPPING ReplicaStatus = 2
	ReplicaStatus_READY         ReplicaStatus = 3
	ReplicaStatus_DISCONNECTED  ReplicaStatus = 4
	ReplicaStatus_ERROR         ReplicaStatus = 5
)

// Enum value maps for ReplicaStatus.
var (
	ReplicaStatus_name = map[int32]string{
		0: "CONNECTING",
		1: "SYNCING",
		2: "BOOTSTRAPPING",
		3: "READY",
		4: "DISCONNECTED",
		5: "ERROR",
	}
	ReplicaStatus_value = map[string]int32{
		"CONNECTING":    0,
		"SYNCING":       1,
		"BOOTSTRAPPING": 2,
		"READY":         3,
		"DISCONNECTED":  4,
		"ERROR":         5,
	}
)

func (x ReplicaStatus) Enum() *ReplicaStatus {
	p := new(ReplicaStatus)
	*p = x
	return p
}

func (x ReplicaStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicaStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_kevo_replication_proto_enumTypes[1].Descriptor()
}

func (ReplicaStatus) Type() protoreflect.EnumType {
	return &file_proto_kevo_replication_proto_enumTypes[1]
}

func (x ReplicaStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicaStatus.Descriptor instead.
func (ReplicaStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{1}
}

// Replica Registration messages
type RegisterReplicaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Role          ReplicaRole            `protobuf:"varint,3,opt,name=role,proto3,enum=kevo.ReplicaRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReplicaRequest) Reset() {
	*x = RegisterReplicaRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReplicaRequest) ProtoMessage() {}

func (x *RegisterReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReplicaRequest.ProtoReflect.Descriptor instead.
func (*RegisterReplicaRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterReplicaRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *RegisterReplicaRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterReplicaRequest) GetRole() ReplicaRole {
	if x != nil {
		return x.Role
	}
	return ReplicaRole_PRIMARY
}

type RegisterReplicaResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage      string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	CurrentLsn        uint64                 `protobuf:"varint,3,opt,name=current_lsn,json=currentLsn,proto3" json:"current_lsn,omitempty"` // Current Lamport Sequence Number on primary
	BootstrapRequired bool                   `protobuf:"varint,4,opt,name=bootstrap_required,json=bootstrapRequired,proto3" json:"bootstrap_required,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterReplicaResponse) Reset() {
	*x = RegisterReplicaResponse{}
	mi := &file_proto_kevo_replication_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReplicaResponse) ProtoMessage() {}

func (x *RegisterReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReplicaResponse.ProtoReflect.Descriptor instead.
func (*RegisterReplicaResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterReplicaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterReplicaResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RegisterReplicaResponse) GetCurrentLsn() uint64 {
	if x != nil {
		return x.CurrentLsn
	}
	return 0
}

func (x *RegisterReplicaResponse) GetBootstrapRequired() bool {
	if x != nil {
		return x.BootstrapRequired
	}
	return false
}

// Heartbeat messages
type ReplicaHeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Status        ReplicaStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=kevo.ReplicaStatus" json:"status,omitempty"`
	CurrentLsn    uint64                 `protobuf:"varint,3,opt,name=current_lsn,json=currentLsn,proto3" json:"current_lsn,omitempty"`      // Current Lamport Sequence Number on replica
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // If status is ERROR
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaHeartbeatRequest) Reset() {
	*x = ReplicaHeartbeatRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaHeartbeatRequest) ProtoMessage() {}

func (x *ReplicaHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*ReplicaHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{2}
}

func (x *ReplicaHeartbeatRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *ReplicaHeartbeatRequest) GetStatus() ReplicaStatus {
	if x != nil {
		return x.Status
	}
	return ReplicaStatus_CONNECTING
}

func (x *ReplicaHeartbeatRequest) GetCurrentLsn() uint64 {
	if x != nil {
		return x.CurrentLsn
	}
	return 0
}

func (x *ReplicaHeartbeatRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ReplicaHeartbeatResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	PrimaryLsn       uint64                 `protobuf:"varint,2,opt,name=primary_lsn,json=primaryLsn,proto3" json:"primary_lsn,omitempty"`                     // Current Lamport Sequence Number on primary
	ReplicationLagMs int64                  `protobuf:"varint,3,opt,name=replication_lag_ms,json=replicationLagMs,proto3" json:"replication_lag_ms,omitempty"` // Estimated lag in milliseconds
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReplicaHeartbeatResponse) Reset() {
	*x = ReplicaHeartbeatResponse{}
	mi := &file_proto_kevo_replication_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaHeartbeatResponse) ProtoMessage() {}

func (x *ReplicaHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*ReplicaHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{3}
}

func (x *ReplicaHeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReplicaHeartbeatResponse) GetPrimaryLsn() uint64 {
	if x != nil {
		return x.PrimaryLsn
	}
	return 0
}

func (x *ReplicaHeartbeatResponse) GetReplicationLagMs() int64 {
	if x != nil {
		return x.ReplicationLagMs
	}
	return 0
}

// Status messages
type GetReplicaStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicaStatusRequest) Reset() {
	*x = GetReplicaStatusRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicaStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicaStatusRequest) ProtoMessage() {}

func (x *GetReplicaStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicaStatusRequest.ProtoReflect.Descriptor instead.
func (*GetReplicaStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{4}
}

func (x *GetReplicaStatusRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

type ReplicaInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId        string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Address          string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Role             ReplicaRole            `protobuf:"varint,3,opt,name=role,proto3,enum=kevo.ReplicaRole" json:"role,omitempty"`
	Status           ReplicaStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=kevo.ReplicaStatus" json:"status,omitempty"`
	LastSeenMs       int64                  `protobuf:"varint,5,opt,name=last_seen_ms,json=lastSeenMs,proto3" json:"last_seen_ms,omitempty"`                   // Timestamp of last heartbeat in milliseconds since epoch
	CurrentLsn       uint64                 `protobuf:"varint,6,opt,name=current_lsn,json=currentLsn,proto3" json:"current_lsn,omitempty"`                     // Current Lamport Sequence Number
	ReplicationLagMs int64                  `protobuf:"varint,7,opt,name=replication_lag_ms,json=replicationLagMs,proto3" json:"replication_lag_ms,omitempty"` // Estimated lag in milliseconds
	ErrorMessage     string                 `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                // If status is ERROR
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReplicaInfo) Reset() {
	*x = ReplicaInfo{}
	mi := &file_proto_kevo_replication_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaInfo) ProtoMessage() {}

func (x *ReplicaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaInfo.ProtoReflect.Descriptor instead.
func (*ReplicaInfo) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{5}
}

func (x *ReplicaInfo) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *ReplicaInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReplicaInfo) GetRole() ReplicaRole {
	if x != nil {
		return x.Role
	}
	return ReplicaRole_PRIMARY
}

func (x *ReplicaInfo) GetStatus() ReplicaStatus {
	if x != nil {
		return x.Status
	}
	return ReplicaStatus_CONNECTING
}

func (x *ReplicaInfo) GetLastSeenMs() int64 {
	if x != nil {
		return x.LastSeenMs
	}
	return 0
}

func (x *ReplicaInfo) GetCurrentLsn() uint64 {
	if x != nil {
		return x.CurrentLsn
	}
	return 0
}

func (x *ReplicaInfo) GetReplicationLagMs() int64 {
	if x != nil {
		return x.ReplicationLagMs
	}
	return 0
}

func (x *ReplicaInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetReplicaStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replica       *ReplicaInfo           `protobuf:"bytes,1,opt,name=replica,proto3" json:"replica,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicaStatusResponse) Reset() {
	*x = GetReplicaStatusResponse{}
	mi := &file_proto_kevo_replication_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicaStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicaStatusResponse) ProtoMessage() {}

func (x *GetReplicaStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicaStatusResponse.ProtoReflect.Descriptor instead.
func (*GetReplicaStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{6}
}

func (x *GetReplicaStatusResponse) GetReplica() *ReplicaInfo {
	if x != nil {
		return x.Replica
	}
	return nil
}

type ListReplicasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReplicasRequest) Reset() {
	*x = ListReplicasRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReplicasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplicasRequest) ProtoMessage() {}

func (x *ListReplicasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplicasRequest.ProtoReflect.Descriptor instead.
func (*ListReplicasRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{7}
}

type ListReplicasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replicas      []*ReplicaInfo         `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReplicasResponse) Reset() {
	*x = ListReplicasResponse{}
	mi := &file_proto_kevo_replication_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReplicasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplicasResponse) ProtoMessage() {}

func (x *ListReplicasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplicasResponse.ProtoReflect.Descriptor instead.
func (*ListReplicasResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{8}
}

func (x *ListReplicasResponse) GetReplicas() []*ReplicaInfo {
	if x != nil {
		return x.Replicas
	}
	return nil
}

// WAL Replication messages
type WALEntry struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SequenceNumber uint64                 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"` // Lamport Sequence Number
	Type           uint32                 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                                           // Entry type (put, delete, etc.)
	Key            []byte                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value          []byte                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`       // Optional, depending on type
	Checksum       []byte                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"` // Checksum for data integrity
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WALEntry) Reset() {
	*x = WALEntry{}
	mi := &file_proto_kevo_replication_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WALEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALEntry) ProtoMessage() {}

func (x *WALEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALEntry.ProtoReflect.Descriptor instead.
func (*WALEntry) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{9}
}

func (x *WALEntry) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *WALEntry) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *WALEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WALEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *WALEntry) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type WALEntryBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*WALEntry            `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	FirstLsn      uint64                 `protobuf:"varint,2,opt,name=first_lsn,json=firstLsn,proto3" json:"first_lsn,omitempty"` // LSN of the first entry in the batch
	LastLsn       uint64                 `protobuf:"varint,3,opt,name=last_lsn,json=lastLsn,proto3" json:"last_lsn,omitempty"`    // LSN of the last entry in the batch
	Count         uint32                 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`                       // Number of entries in the batch
	Checksum      []byte                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`                  // Checksum of the entire batch
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WALEntryBatch) Reset() {
	*x = WALEntryBatch{}
	mi := &file_proto_kevo_replication_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WALEntryBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALEntryBatch) ProtoMessage() {}

func (x *WALEntryBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALEntryBatch.ProtoReflect.Descriptor instead.
func (*WALEntryBatch) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{10}
}

func (x *WALEntryBatch) GetEntries() []*WALEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *WALEntryBatch) GetFirstLsn() uint64 {
	if x != nil {
		return x.FirstLsn
	}
	return 0
}

func (x *WALEntryBatch) GetLastLsn() uint64 {
	if x != nil {
		return x.LastLsn
	}
	return 0
}

func (x *WALEntryBatch) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WALEntryBatch) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type GetWALEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	FromLsn       uint64                 `protobuf:"varint,2,opt,name=from_lsn,json=fromLsn,proto3" json:"from_lsn,omitempty"`          // Request entries starting from this LSN
	MaxEntries    uint32                 `protobuf:"varint,3,opt,name=max_entries,json=maxEntries,proto3" json:"max_entries,omitempty"` // Maximum number of entries to return (0 for no limit)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWALEntriesRequest) Reset() {
	*x = GetWALEntriesRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWALEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWALEntriesRequest) ProtoMessage() {}

func (x *GetWALEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWALEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetWALEntriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{11}
}

func (x *GetWALEntriesRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *GetWALEntriesRequest) GetFromLsn() uint64 {
	if x != nil {
		return x.FromLsn
	}
	return 0
}

func (x *GetWALEntriesRequest) GetMaxEntries() uint32 {
	if x != nil {
		return x.MaxEntries
	}
	return 0
}

type GetWALEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Batch         *WALEntryBatch         `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"` // True if there are more entries available
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWALEntriesResponse) Reset() {
	*x = GetWALEntriesResponse{}
	mi := &file_proto_kevo_replication_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWALEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWALEntriesResponse) ProtoMessage() {}

func (x *GetWALEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWALEntriesResponse.ProtoReflect.Descriptor instead.
func (*GetWALEntriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{12}
}

func (x *GetWALEntriesResponse) GetBatch() *WALEntryBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

func (x *GetWALEntriesResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type StreamWALEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	FromLsn       uint64                 `protobuf:"varint,2,opt,name=from_lsn,json=fromLsn,proto3" json:"from_lsn,omitempty"` // Request entries starting from this LSN
	Continuous    bool                   `protobuf:"varint,3,opt,name=continuous,proto3" json:"continuous,omitempty"`          // If true, keep streaming as new entries arrive
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamWALEntriesRequest) Reset() {
	*x = StreamWALEntriesRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWALEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWALEntriesRequest) ProtoMessage() {}

func (x *StreamWALEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWALEntriesRequest.ProtoReflect.Descriptor instead.
func (*StreamWALEntriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{13}
}

func (x *StreamWALEntriesRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *StreamWALEntriesRequest) GetFromLsn() uint64 {
	if x != nil {
		return x.FromLsn
	}
	return 0
}

func (x *StreamWALEntriesRequest) GetContinuous() bool {
	if x != nil {
		return x.Continuous
	}
	return false
}

type ReportAppliedEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	AppliedLsn    uint64                 `protobuf:"varint,2,opt,name=applied_lsn,json=appliedLsn,proto3" json:"applied_lsn,omitempty"` // Highest LSN successfully applied on the replica
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAppliedEntriesRequest) Reset() {
	*x = ReportAppliedEntriesRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAppliedEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAppliedEntriesRequest) ProtoMessage() {}

func (x *ReportAppliedEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAppliedEntriesRequest.ProtoReflect.Descriptor instead.
func (*ReportAppliedEntriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{14}
}

func (x *ReportAppliedEntriesRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

func (x *ReportAppliedEntriesRequest) GetAppliedLsn() uint64 {
	if x != nil {
		return x.AppliedLsn
	}
	return 0
}

type ReportAppliedEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	PrimaryLsn    uint64                 `protobuf:"varint,2,opt,name=primary_lsn,json=primaryLsn,proto3" json:"primary_lsn,omitempty"` // Current LSN on primary
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAppliedEntriesResponse) Reset() {
	*x = ReportAppliedEntriesResponse{}
	mi := &file_proto_kevo_replication_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAppliedEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAppliedEntriesResponse) ProtoMessage() {}

func (x *ReportAppliedEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAppliedEntriesResponse.ProtoReflect.Descriptor instead.
func (*ReportAppliedEntriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{15}
}

func (x *ReportAppliedEntriesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportAppliedEntriesResponse) GetPrimaryLsn() uint64 {
	if x != nil {
		return x.PrimaryLsn
	}
	return 0
}

// Bootstrap messages
type BootstrapRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplicaId     string                 `protobuf:"bytes,1,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapRequest) Reset() {
	*x = BootstrapRequest{}
	mi := &file_proto_kevo_replication_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapRequest) ProtoMessage() {}

func (x *BootstrapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapRequest.ProtoReflect.Descriptor instead.
func (*BootstrapRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{16}
}

func (x *BootstrapRequest) GetReplicaId() string {
	if x != nil {
		return x.ReplicaId
	}
	return ""
}

type KeyValuePair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	mi := &file_proto_kevo_replication_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{17}
}

func (x *KeyValuePair) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValuePair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type BootstrapBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pairs         []*KeyValuePair        `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
	Progress      float32                `protobuf:"fixed32,2,opt,name=progress,proto3" json:"progress,omitempty"`                         // Progress from 0.0 to 1.0
	IsLast        bool                   `protobuf:"varint,3,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"`                // True if this is the last batch
	SnapshotLsn   uint64                 `protobuf:"varint,4,opt,name=snapshot_lsn,json=snapshotLsn,proto3" json:"snapshot_lsn,omitempty"` // LSN at which this snapshot was taken
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapBatch) Reset() {
	*x = BootstrapBatch{}
	mi := &file_proto_kevo_replication_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapBatch) ProtoMessage() {}

func (x *BootstrapBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_replication_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapBatch.ProtoReflect.Descriptor instead.
func (*BootstrapBatch) Descriptor() ([]byte, []int) {
	return file_proto_kevo_replication_proto_rawDescGZIP(), []int{18}
}

func (x *BootstrapBatch) GetPairs() []*KeyValuePair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *BootstrapBatch) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *BootstrapBatch) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

func (x *BootstrapBatch) GetSnapshotLsn() uint64 {
	if x != nil {
		return x.SnapshotLsn
	}
	return 0
}

var File_proto_kevo_replication_proto protoreflect.FileDescriptor

const file_proto_kevo_replication_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/kevo/replication.proto\x12\x04kevo\"x\n" +
	"\x16RegisterReplicaRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12%\n" +
	"\x04role\x18\x03 \x01(\x0e2\x11.kevo.ReplicaRoleR\x04role\"\xa8\x01\n" +
	"\x17RegisterReplicaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vcurrent_lsn\x18\x03 \x01(\x04R\n" +
	"currentLsn\x12-\n" +
	"\x12bootstrap_required\x18\x04 \x01(\bR\x11bootstrapRequired\"\xab\x01\n" +
	"\x17ReplicaHeartbeatRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12+\n" +
	"\x06status\x18\x02 \x01(\x0e2\x13.kevo.ReplicaStatusR\x06status\x12\x1f\n" +
	"\vcurrent_lsn\x18\x03 \x01(\x04R\n" +
	"currentLsn\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\x83\x01\n" +
	"\x18ReplicaHeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vprimary_lsn\x18\x02 \x01(\x04R\n" +
	"primaryLsn\x12,\n" +
	"\x12replication_lag_ms\x18\x03 \x01(\x03R\x10replicationLagMs\"8\n" +
	"\x17GetReplicaStatusRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\"\xb0\x02\n" +
	"\vReplicaInfo\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12%\n" +
	"\x04role\x18\x03 \x01(\x0e2\x11.kevo.ReplicaRoleR\x04role\x12+\n" +
	"\x06status\x18\x04 \x01(\x0e2\x13.kevo.ReplicaStatusR\x06status\x12 \n" +
	"\flast_seen_ms\x18\x05 \x01(\x03R\n" +
	"lastSeenMs\x12\x1f\n" +
	"\vcurrent_lsn\x18\x06 \x01(\x04R\n" +
	"currentLsn\x12,\n" +
	"\x12replication_lag_ms\x18\a \x01(\x03R\x10replicationLagMs\x12#\n" +
	"\rerror_message\x18\b \x01(\tR\ferrorMessage\"G\n" +
	"\x18GetReplicaStatusResponse\x12+\n" +
	"\areplica\x18\x01 \x01(\v2\x11.kevo.ReplicaInfoR\areplica\"\x15\n" +
	"\x13ListReplicasRequest\"E\n" +
	"\x14ListReplicasResponse\x12-\n" +
	"\breplicas\x18\x01 \x03(\v2\x11.kevo.ReplicaInfoR\breplicas\"\x8b\x01\n" +
	"\bWALEntry\x12'\n" +
	"\x0fsequence_number\x18\x01 \x01(\x04R\x0esequenceNumber\x12\x12\n" +
	"\x04type\x18\x02 \x01(\rR\x04type\x12\x10\n" +
	"\x03key\x18\x03 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x04 \x01(\fR\x05value\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\fR\bchecksum\"\xa3\x01\n" +
	"\rWALEntryBatch\x12(\n" +
	"\aentries\x18\x01 \x03(\v2\x0e.kevo.WALEntryR\aentries\x12\x1b\n" +
	"\tfirst_lsn\x18\x02 \x01(\x04R\bfirstLsn\x12\x19\n" +
	"\blast_lsn\x18\x03 \x01(\x04R\alastLsn\x12\x14\n" +
	"\x05count\x18\x04 \x01(\rR\x05count\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\fR\bchecksum\"q\n" +
	"\x14GetWALEntriesRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12\x19\n" +
	"\bfrom_lsn\x18\x02 \x01(\x04R\afromLsn\x12\x1f\n" +
	"\vmax_entries\x18\x03 \x01(\rR\n" +
	"maxEntries\"]\n" +
	"\x15GetWALEntriesResponse\x12)\n" +
	"\x05batch\x18\x01 \x01(\v2\x13.kevo.WALEntryBatchR\x05batch\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\"s\n" +
	"\x17StreamWALEntriesRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12\x19\n" +
	"\bfrom_lsn\x18\x02 \x01(\x04R\afromLsn\x12\x1e\n" +
	"\n" +
	"continuous\x18\x03 \x01(\bR\n" +
	"continuous\"]\n" +
	"\x1bReportAppliedEntriesRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\x12\x1f\n" +
	"\vapplied_lsn\x18\x02 \x01(\x04R\n" +
	"appliedLsn\"Y\n" +
	"\x1cReportAppliedEntriesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vprimary_lsn\x18\x02 \x01(\x04R\n" +
	"primaryLsn\"1\n" +
	"\x10BootstrapRequest\x12\x1d\n" +
	"\n" +
	"replica_id\x18\x01 \x01(\tR\treplicaId\"6\n" +
	"\fKeyValuePair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"\x92\x01\n" +
	"\x0eBootstrapBatch\x12(\n" +
	"\x05pairs\x18\x01 \x03(\v2\x12.kevo.KeyValuePairR\x05pairs\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\x02R\bprogress\x12\x17\n" +
	"\ais_last\x18\x03 \x01(\bR\x06isLast\x12!\n" +
	"\fsnapshot_lsn\x18\x04 \x01(\x04R\vsnapshotLsn*6\n" +
	"\vReplicaRole\x12\v\n" +
	"\aPRIMARY\x10\x00\x12\v\n" +
	"\aREPLICA\x10\x01\x12\r\n" +
	"\tREAD_ONLY\x10\x02*g\n" +
	"\rReplicaStatus\x12\x0e\n" +
	"\n" +
	"CONNECTING\x10\x00\x12\v\n" +
	"\aSYNCING\x10\x01\x12\x11\n" +
	"\rBOOTSTRAPPING\x10\x02\x12\t\n" +
	"\x05READY\x10\x03\x12\x10\n" +
	"\fDISCONNECTED\x10\x04\x12\t\n" +
	"\x05ERROR\x10\x052\x88\x05\n" +
	"\x12ReplicationService\x12N\n" +
	"\x0fRegisterReplica\x12\x1c.kevo.RegisterReplicaRequest\x1a\x1d.kevo.RegisterReplicaResponse\x12Q\n" +
	"\x10ReplicaHeartbeat\x12\x1d.kevo.ReplicaHeartbeatRequest\x1a\x1e.kevo.ReplicaHeartbeatResponse\x12Q\n" +
	"\x10GetReplicaStatus\x12\x1d.kevo.GetReplicaStatusRequest\x1a\x1e.kevo.GetReplicaStatusResponse\x12E\n" +
	"\fListReplicas\x12\x19.kevo.ListReplicasRequest\x1a\x1a.kevo.ListReplicasResponse\x12H\n" +
	"\rGetWALEntries\x12\x1a.kevo.GetWALEntriesRequest\x1a\x1b.kevo.GetWALEntriesResponse\x12H\n" +
	"\x10StreamWALEntries\x12\x1d.kevo.StreamWALEntriesRequest\x1a\x13.kevo.WALEntryBatch0\x01\x12]\n" +
	"\x14ReportAppliedEntries\x12!.kevo.ReportAppliedEntriesRequest\x1a\".kevo.ReportAppliedEntriesResponse\x12B\n" +
	"\x10RequestBootstrap\x12\x16.kevo.BootstrapRequest\x1a\x14.kevo.BootstrapBatch0\x01B#Z!github.com/KevoDB/kevo/proto/kevob\x06proto3"

var (
	file_proto_kevo_replication_proto_rawDescOnce sync.Once
	file_proto_kevo_replication_proto_rawDescData []byte
)

func file_proto_kevo_replication_proto_rawDescGZIP() []byte {
	file_proto_kevo_replication_proto_rawDescOnce.Do(func() {
		file_proto_kevo_replication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_kevo_replication_proto_rawDesc), len(file_proto_kevo_replication_proto_rawDesc)))
	})
	return file_proto_kevo_replication_proto_rawDescData
}

var file_proto_kevo_replication_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_kevo_replication_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_kevo_replication_proto_goTypes = []any{
	(ReplicaRole)(0),                     // 0: kevo.ReplicaRole
	(ReplicaStatus)(0),                   // 1: kevo.ReplicaStatus
	(*RegisterReplicaRequest)(nil),       // 2: kevo.RegisterReplicaRequest
	(*RegisterReplicaResponse)(nil),      // 3: kevo.RegisterReplicaResponse
	(*ReplicaHeartbeatRequest)(nil),      // 4: kevo.ReplicaHeartbeatRequest
	(*ReplicaHeartbeatResponse)(nil),     // 5: kevo.ReplicaHeartbeatResponse
	(*GetReplicaStatusRequest)(nil),      // 6: kevo.GetReplicaStatusRequest
	(*ReplicaInfo)(nil),                  // 7: kevo.ReplicaInfo
	(*GetReplicaStatusResponse)(nil),     // 8: kevo.GetReplicaStatusResponse
	(*ListReplicasRequest)(nil),          // 9: kevo.ListReplicasRequest
	(*ListReplicasResponse)(nil),         // 10: kevo.ListReplicasResponse
	(*WALEntry)(nil),                     // 11: kevo.WALEntry
	(*WALEntryBatch)(nil),                // 12: kevo.WALEntryBatch
	(*GetWALEntriesRequest)(nil),         // 13: kevo.GetWALEntriesRequest
	(*GetWALEntriesResponse)(nil),        // 14: kevo.GetWALEntriesResponse
	(*StreamWALEntriesRequest)(nil),      // 15: kevo.StreamWALEntriesRequest
	(*ReportAppliedEntriesRequest)(nil),  // 16: kevo.ReportAppliedEntriesRequest
	(*ReportAppliedEntriesResponse)(nil), // 17: kevo.ReportAppliedEntriesResponse
	(*BootstrapRequest)(nil),             // 18: kevo.BootstrapRequest
	(*KeyValuePair)(nil),                 // 19: kevo.KeyValuePair
	(*BootstrapBatch)(nil),               // 20: kevo.BootstrapBatch
}
var file_proto_kevo_replication_proto_depIdxs = []int32{
	0,  // 0: kevo.RegisterReplicaRequest.role:type_name -> kevo.ReplicaRole
	1,  // 1: kevo.ReplicaHeartbeatRequest.status:type_name -> kevo.ReplicaStatus
	0,  // 2: kevo.ReplicaInfo.role:type_name -> kevo.ReplicaRole
	1,  // 3: kevo.ReplicaInfo.status:type_name -> kevo.ReplicaStatus
	7,  // 4: kevo.GetReplicaStatusResponse.replica:type_name -> kevo.ReplicaInfo
	7,  // 5: kevo.ListReplicasResponse.replicas:type_name -> kevo.ReplicaInfo
	11, // 6: kevo.WALEntryBatch.entries:type_name -> kevo.WALEntry
	12, // 7: kevo.GetWALEntriesResponse.batch:type_name -> kevo.WALEntryBatch
	19, // 8: kevo.BootstrapBatch.pairs:type_name -> kevo.KeyValuePair
	2,  // 9: kevo.ReplicationService.RegisterReplica:input_type -> kevo.RegisterReplicaRequest
	4,  // 10: kevo.ReplicationService.ReplicaHeartbeat:input_type -> kevo.ReplicaHeartbeatRequest
	6,  // 11: kevo.ReplicationService.GetReplicaStatus:input_type -> kevo.GetReplicaStatusRequest
	9,  // 12: kevo.ReplicationService.ListReplicas:input_type -> kevo.ListReplicasRequest
	13, // 13: kevo.ReplicationService.GetWALEntries:input_type -> kevo.GetWALEntriesRequest
	15, // 14: kevo.ReplicationService.StreamWALEntries:input_type -> kevo.StreamWALEntriesRequest
	16, // 15: kevo.ReplicationService.ReportAppliedEntries:input_type -> kevo.ReportAppliedEntriesRequest
	18, // 16: kevo.ReplicationService.RequestBootstrap:input_type -> kevo.BootstrapRequest
	3,  // 17: kevo.ReplicationService.RegisterReplica:output_type -> kevo.RegisterReplicaResponse
	5,  // 18: kevo.ReplicationService.ReplicaHeartbeat:output_type -> kevo.ReplicaHeartbeatResponse
	8,  // 19: kevo.ReplicationService.GetReplicaStatus:output_type -> kevo.GetReplicaStatusResponse
	10, // 20: kevo.ReplicationService.ListReplicas:output_type -> kevo.ListReplicasResponse
	14, // 21: kevo.ReplicationService.GetWALEntries:output_type -> kevo.GetWALEntriesResponse
	12, // 22: kevo.ReplicationService.StreamWALEntries:output_type -> kevo.WALEntryBatch
	17, // 23: kevo.ReplicationService.ReportAppliedEntries:output_type -> kevo.ReportAppliedEntriesResponse
	20, // 24: kevo.ReplicationService.RequestBootstrap:output_type -> kevo.BootstrapBatch
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_kevo_replication_proto_init() }
func file_proto_kevo_replication_proto_init() {
	if File_proto_kevo_replication_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_kevo_replication_proto_rawDesc), len(file_proto_kevo_replication_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_kevo_replication_proto_goTypes,
		DependencyIndexes: file_proto_kevo_replication_proto_depIdxs,
		EnumInfos:         file_proto_kevo_replication_proto_enumTypes,
		MessageInfos:      file_proto_kevo_replication_proto_msgTypes,
	}.Build()
	File_proto_kevo_replication_proto = out.File
	file_proto_kevo_replication_proto_goTypes = nil
	file_proto_kevo_replication_proto_depIdxs = nil
}

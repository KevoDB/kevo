// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: proto/kevo/service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation_Type int32

const (
	Operation_PUT    Operation_Type = 0
	Operation_DELETE Operation_Type = 1
)

// Enum value maps for Operation_Type.
var (
	Operation_Type_name = map[int32]string{
		0: "PUT",
		1: "DELETE",
	}
	Operation_Type_value = map[string]int32{
		"PUT":    0,
		"DELETE": 1,
	}
)

func (x Operation_Type) Enum() *Operation_Type {
	p := new(Operation_Type)
	*p = x
	return p
}

func (x Operation_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_kevo_service_proto_enumTypes[0].Descriptor()
}

func (Operation_Type) Type() protoreflect.EnumType {
	return &file_proto_kevo_service_proto_enumTypes[0]
}

func (x Operation_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation_Type.Descriptor instead.
func (Operation_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{7, 0}
}

// Basic message types
type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type PutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Sync          bool                   `protobuf:"varint,3,opt,name=sync,proto3" json:"sync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{2}
}

func (x *PutRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutRequest) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{3}
}

func (x *PutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Sync          bool                   `protobuf:"varint,2,opt,name=sync,proto3" json:"sync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteRequest) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Batch operations
type BatchWriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operations    []*Operation           `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	Sync          bool                   `protobuf:"varint,2,opt,name=sync,proto3" json:"sync,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchWriteRequest) Reset() {
	*x = BatchWriteRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchWriteRequest) ProtoMessage() {}

func (x *BatchWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchWriteRequest.ProtoReflect.Descriptor instead.
func (*BatchWriteRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{6}
}

func (x *BatchWriteRequest) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *BatchWriteRequest) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

type Operation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Operation_Type         `protobuf:"varint,1,opt,name=type,proto3,enum=kevo.Operation_Type" json:"type,omitempty"`
	Key           []byte                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"` // Only used for PUT
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_proto_kevo_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{7}
}

func (x *Operation) GetType() Operation_Type {
	if x != nil {
		return x.Type
	}
	return Operation_PUT
}

func (x *Operation) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Operation) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type BatchWriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchWriteResponse) Reset() {
	*x = BatchWriteResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchWriteResponse) ProtoMessage() {}

func (x *BatchWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchWriteResponse.ProtoReflect.Descriptor instead.
func (*BatchWriteResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{8}
}

func (x *BatchWriteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Iterator operations
type ScanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        []byte                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix        []byte                 `protobuf:"bytes,5,opt,name=suffix,proto3" json:"suffix,omitempty"`
	StartKey      []byte                 `protobuf:"bytes,2,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	EndKey        []byte                 `protobuf:"bytes,3,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanRequest) Reset() {
	*x = ScanRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRequest) ProtoMessage() {}

func (x *ScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRequest.ProtoReflect.Descriptor instead.
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{9}
}

func (x *ScanRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *ScanRequest) GetSuffix() []byte {
	if x != nil {
		return x.Suffix
	}
	return nil
}

func (x *ScanRequest) GetStartKey() []byte {
	if x != nil {
		return x.StartKey
	}
	return nil
}

func (x *ScanRequest) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

func (x *ScanRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ScanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResponse) Reset() {
	*x = ScanResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResponse) ProtoMessage() {}

func (x *ScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResponse.ProtoReflect.Descriptor instead.
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{10}
}

func (x *ScanResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ScanResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Transaction operations
type BeginTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReadOnly      bool                   `protobuf:"varint,1,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginTransactionRequest) Reset() {
	*x = BeginTransactionRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionRequest) ProtoMessage() {}

func (x *BeginTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransactionRequest.ProtoReflect.Descriptor instead.
func (*BeginTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{11}
}

func (x *BeginTransactionRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type BeginTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginTransactionResponse) Reset() {
	*x = BeginTransactionResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionResponse) ProtoMessage() {}

func (x *BeginTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginTransactionResponse.ProtoReflect.Descriptor instead.
func (*BeginTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{12}
}

func (x *BeginTransactionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type CommitTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitTransactionRequest) Reset() {
	*x = CommitTransactionRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionRequest) ProtoMessage() {}

func (x *CommitTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionRequest.ProtoReflect.Descriptor instead.
func (*CommitTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{13}
}

func (x *CommitTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type CommitTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitTransactionResponse) Reset() {
	*x = CommitTransactionResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionResponse) ProtoMessage() {}

func (x *CommitTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransactionResponse.ProtoReflect.Descriptor instead.
func (*CommitTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{14}
}

func (x *CommitTransactionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RollbackTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackTransactionRequest) Reset() {
	*x = RollbackTransactionRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionRequest) ProtoMessage() {}

func (x *RollbackTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransactionRequest.ProtoReflect.Descriptor instead.
func (*RollbackTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{15}
}

func (x *RollbackTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type RollbackTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackTransactionResponse) Reset() {
	*x = RollbackTransactionResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionResponse) ProtoMessage() {}

func (x *RollbackTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransactionResponse.ProtoReflect.Descriptor instead.
func (*RollbackTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{16}
}

func (x *RollbackTransactionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TxGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Key           []byte                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxGetRequest) Reset() {
	*x = TxGetRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxGetRequest) ProtoMessage() {}

func (x *TxGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxGetRequest.ProtoReflect.Descriptor instead.
func (*TxGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{17}
}

func (x *TxGetRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TxGetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type TxGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxGetResponse) Reset() {
	*x = TxGetResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxGetResponse) ProtoMessage() {}

func (x *TxGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxGetResponse.ProtoReflect.Descriptor instead.
func (*TxGetResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{18}
}

func (x *TxGetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TxGetResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type TxPutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Key           []byte                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxPutRequest) Reset() {
	*x = TxPutRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxPutRequest) ProtoMessage() {}

func (x *TxPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxPutRequest.ProtoReflect.Descriptor instead.
func (*TxPutRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{19}
}

func (x *TxPutRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TxPutRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TxPutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TxPutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxPutResponse) Reset() {
	*x = TxPutResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxPutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxPutResponse) ProtoMessage() {}

func (x *TxPutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxPutResponse.ProtoReflect.Descriptor instead.
func (*TxPutResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{20}
}

func (x *TxPutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TxDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Key           []byte                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxDeleteRequest) Reset() {
	*x = TxDeleteRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDeleteRequest) ProtoMessage() {}

func (x *TxDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDeleteRequest.ProtoReflect.Descriptor instead.
func (*TxDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{21}
}

func (x *TxDeleteRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TxDeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type TxDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxDeleteResponse) Reset() {
	*x = TxDeleteResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDeleteResponse) ProtoMessage() {}

func (x *TxDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDeleteResponse.ProtoReflect.Descriptor instead.
func (*TxDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{22}
}

func (x *TxDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TxScanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Prefix        []byte                 `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix        []byte                 `protobuf:"bytes,6,opt,name=suffix,proto3" json:"suffix,omitempty"`
	StartKey      []byte                 `protobuf:"bytes,3,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	EndKey        []byte                 `protobuf:"bytes,4,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxScanRequest) Reset() {
	*x = TxScanRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxScanRequest) ProtoMessage() {}

func (x *TxScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxScanRequest.ProtoReflect.Descriptor instead.
func (*TxScanRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{23}
}

func (x *TxScanRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TxScanRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *TxScanRequest) GetSuffix() []byte {
	if x != nil {
		return x.Suffix
	}
	return nil
}

func (x *TxScanRequest) GetStartKey() []byte {
	if x != nil {
		return x.StartKey
	}
	return nil
}

func (x *TxScanRequest) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

func (x *TxScanRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type TxScanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxScanResponse) Reset() {
	*x = TxScanResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxScanResponse) ProtoMessage() {}

func (x *TxScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxScanResponse.ProtoReflect.Descriptor instead.
func (*TxScanResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{24}
}

func (x *TxScanResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TxScanResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Administrative operations
type GetStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{25}
}

type GetStatsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	KeyCount           int64                  `protobuf:"varint,1,opt,name=key_count,json=keyCount,proto3" json:"key_count,omitempty"`
	StorageSize        int64                  `protobuf:"varint,2,opt,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty"`
	MemtableCount      int32                  `protobuf:"varint,3,opt,name=memtable_count,json=memtableCount,proto3" json:"memtable_count,omitempty"`
	SstableCount       int32                  `protobuf:"varint,4,opt,name=sstable_count,json=sstableCount,proto3" json:"sstable_count,omitempty"`
	WriteAmplification float64                `protobuf:"fixed64,5,opt,name=write_amplification,json=writeAmplification,proto3" json:"write_amplification,omitempty"`
	ReadAmplification  float64                `protobuf:"fixed64,6,opt,name=read_amplification,json=readAmplification,proto3" json:"read_amplification,omitempty"`
	// Operation counts
	OperationCounts map[string]uint64 `protobuf:"bytes,7,rep,name=operation_counts,json=operationCounts,proto3" json:"operation_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Latency statistics
	LatencyStats map[string]*LatencyStats `protobuf:"bytes,8,rep,name=latency_stats,json=latencyStats,proto3" json:"latency_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error statistics
	ErrorCounts map[string]uint64 `protobuf:"bytes,9,rep,name=error_counts,json=errorCounts,proto3" json:"error_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Performance metrics
	TotalBytesRead    int64 `protobuf:"varint,10,opt,name=total_bytes_read,json=totalBytesRead,proto3" json:"total_bytes_read,omitempty"`
	TotalBytesWritten int64 `protobuf:"varint,11,opt,name=total_bytes_written,json=totalBytesWritten,proto3" json:"total_bytes_written,omitempty"`
	FlushCount        int64 `protobuf:"varint,12,opt,name=flush_count,json=flushCount,proto3" json:"flush_count,omitempty"`
	CompactionCount   int64 `protobuf:"varint,13,opt,name=compaction_count,json=compactionCount,proto3" json:"compaction_count,omitempty"`
	// Recovery statistics
	RecoveryStats *RecoveryStats `protobuf:"bytes,14,opt,name=recovery_stats,json=recoveryStats,proto3" json:"recovery_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatsResponse) Reset() {
	*x = GetStatsResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResponse) ProtoMessage() {}

func (x *GetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetStatsResponse) GetKeyCount() int64 {
	if x != nil {
		return x.KeyCount
	}
	return 0
}

func (x *GetStatsResponse) GetStorageSize() int64 {
	if x != nil {
		return x.StorageSize
	}
	return 0
}

func (x *GetStatsResponse) GetMemtableCount() int32 {
	if x != nil {
		return x.MemtableCount
	}
	return 0
}

func (x *GetStatsResponse) GetSstableCount() int32 {
	if x != nil {
		return x.SstableCount
	}
	return 0
}

func (x *GetStatsResponse) GetWriteAmplification() float64 {
	if x != nil {
		return x.WriteAmplification
	}
	return 0
}

func (x *GetStatsResponse) GetReadAmplification() float64 {
	if x != nil {
		return x.ReadAmplification
	}
	return 0
}

func (x *GetStatsResponse) GetOperationCounts() map[string]uint64 {
	if x != nil {
		return x.OperationCounts
	}
	return nil
}

func (x *GetStatsResponse) GetLatencyStats() map[string]*LatencyStats {
	if x != nil {
		return x.LatencyStats
	}
	return nil
}

func (x *GetStatsResponse) GetErrorCounts() map[string]uint64 {
	if x != nil {
		return x.ErrorCounts
	}
	return nil
}

func (x *GetStatsResponse) GetTotalBytesRead() int64 {
	if x != nil {
		return x.TotalBytesRead
	}
	return 0
}

func (x *GetStatsResponse) GetTotalBytesWritten() int64 {
	if x != nil {
		return x.TotalBytesWritten
	}
	return 0
}

func (x *GetStatsResponse) GetFlushCount() int64 {
	if x != nil {
		return x.FlushCount
	}
	return 0
}

func (x *GetStatsResponse) GetCompactionCount() int64 {
	if x != nil {
		return x.CompactionCount
	}
	return 0
}

func (x *GetStatsResponse) GetRecoveryStats() *RecoveryStats {
	if x != nil {
		return x.RecoveryStats
	}
	return nil
}

type LatencyStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	AvgNs         uint64                 `protobuf:"varint,2,opt,name=avg_ns,json=avgNs,proto3" json:"avg_ns,omitempty"`
	MinNs         uint64                 `protobuf:"varint,3,opt,name=min_ns,json=minNs,proto3" json:"min_ns,omitempty"`
	MaxNs         uint64                 `protobuf:"varint,4,opt,name=max_ns,json=maxNs,proto3" json:"max_ns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatencyStats) Reset() {
	*x = LatencyStats{}
	mi := &file_proto_kevo_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatencyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyStats) ProtoMessage() {}

func (x *LatencyStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyStats.ProtoReflect.Descriptor instead.
func (*LatencyStats) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{27}
}

func (x *LatencyStats) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LatencyStats) GetAvgNs() uint64 {
	if x != nil {
		return x.AvgNs
	}
	return 0
}

func (x *LatencyStats) GetMinNs() uint64 {
	if x != nil {
		return x.MinNs
	}
	return 0
}

func (x *LatencyStats) GetMaxNs() uint64 {
	if x != nil {
		return x.MaxNs
	}
	return 0
}

type RecoveryStats struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	WalFilesRecovered     uint64                 `protobuf:"varint,1,opt,name=wal_files_recovered,json=walFilesRecovered,proto3" json:"wal_files_recovered,omitempty"`
	WalEntriesRecovered   uint64                 `protobuf:"varint,2,opt,name=wal_entries_recovered,json=walEntriesRecovered,proto3" json:"wal_entries_recovered,omitempty"`
	WalCorruptedEntries   uint64                 `protobuf:"varint,3,opt,name=wal_corrupted_entries,json=walCorruptedEntries,proto3" json:"wal_corrupted_entries,omitempty"`
	WalRecoveryDurationMs int64                  `protobuf:"varint,4,opt,name=wal_recovery_duration_ms,json=walRecoveryDurationMs,proto3" json:"wal_recovery_duration_ms,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RecoveryStats) Reset() {
	*x = RecoveryStats{}
	mi := &file_proto_kevo_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoveryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveryStats) ProtoMessage() {}

func (x *RecoveryStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveryStats.ProtoReflect.Descriptor instead.
func (*RecoveryStats) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{28}
}

func (x *RecoveryStats) GetWalFilesRecovered() uint64 {
	if x != nil {
		return x.WalFilesRecovered
	}
	return 0
}

func (x *RecoveryStats) GetWalEntriesRecovered() uint64 {
	if x != nil {
		return x.WalEntriesRecovered
	}
	return 0
}

func (x *RecoveryStats) GetWalCorruptedEntries() uint64 {
	if x != nil {
		return x.WalCorruptedEntries
	}
	return 0
}

func (x *RecoveryStats) GetWalRecoveryDurationMs() int64 {
	if x != nil {
		return x.WalRecoveryDurationMs
	}
	return 0
}

type CompactRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Force         bool                   `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompactRequest) Reset() {
	*x = CompactRequest{}
	mi := &file_proto_kevo_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactRequest) ProtoMessage() {}

func (x *CompactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactRequest.ProtoReflect.Descriptor instead.
func (*CompactRequest) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{29}
}

func (x *CompactRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type CompactResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompactResponse) Reset() {
	*x = CompactResponse{}
	mi := &file_proto_kevo_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactResponse) ProtoMessage() {}

func (x *CompactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kevo_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactResponse.ProtoReflect.Descriptor instead.
func (*CompactResponse) Descriptor() ([]byte, []int) {
	return file_proto_kevo_service_proto_rawDescGZIP(), []int{30}
}

func (x *CompactResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_kevo_service_proto protoreflect.FileDescriptor

const file_proto_kevo_service_proto_rawDesc = "" +
	"\n" +
	"\x18proto/kevo/service.proto\x12\x04kevo\"\x1e\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\"9\n" +
	"\vGetResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"H\n" +
	"\n" +
	"PutRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x12\n" +
	"\x04sync\x18\x03 \x01(\bR\x04sync\"'\n" +
	"\vPutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"5\n" +
	"\rDeleteRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x12\n" +
	"\x04sync\x18\x02 \x01(\bR\x04sync\"*\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"X\n" +
	"\x11BatchWriteRequest\x12/\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2\x0f.kevo.OperationR\n" +
	"operations\x12\x12\n" +
	"\x04sync\x18\x02 \x01(\bR\x04sync\"z\n" +
	"\tOperation\x12(\n" +
	"\x04type\x18\x01 \x01(\x0e2\x14.kevo.Operation.TypeR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x03 \x01(\fR\x05value\"\x1b\n" +
	"\x04Type\x12\a\n" +
	"\x03PUT\x10\x00\x12\n" +
	"\n" +
	"\x06DELETE\x10\x01\".\n" +
	"\x12BatchWriteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x89\x01\n" +
	"\vScanRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\fR\x06prefix\x12\x16\n" +
	"\x06suffix\x18\x05 \x01(\fR\x06suffix\x12\x1b\n" +
	"\tstart_key\x18\x02 \x01(\fR\bstartKey\x12\x17\n" +
	"\aend_key\x18\x03 \x01(\fR\x06endKey\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"6\n" +
	"\fScanResponse\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"6\n" +
	"\x17BeginTransactionRequest\x12\x1b\n" +
	"\tread_only\x18\x01 \x01(\bR\breadOnly\"A\n" +
	"\x18BeginTransactionResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"A\n" +
	"\x18CommitTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"5\n" +
	"\x19CommitTransactionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"C\n" +
	"\x1aRollbackTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"7\n" +
	"\x1bRollbackTransactionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"G\n" +
	"\fTxGetRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x10\n" +
	"\x03key\x18\x02 \x01(\fR\x03key\";\n" +
	"\rTxGetResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"]\n" +
	"\fTxPutRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x10\n" +
	"\x03key\x18\x02 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x03 \x01(\fR\x05value\")\n" +
	"\rTxPutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"J\n" +
	"\x0fTxDeleteRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x10\n" +
	"\x03key\x18\x02 \x01(\fR\x03key\",\n" +
	"\x10TxDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xb2\x01\n" +
	"\rTxScanRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x16\n" +
	"\x06prefix\x18\x02 \x01(\fR\x06prefix\x12\x16\n" +
	"\x06suffix\x18\x06 \x01(\fR\x06suffix\x12\x1b\n" +
	"\tstart_key\x18\x03 \x01(\fR\bstartKey\x12\x17\n" +
	"\aend_key\x18\x04 \x01(\fR\x06endKey\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"8\n" +
	"\x0eTxScanResponse\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"\x11\n" +
	"\x0fGetStatsRequest\"\xac\a\n" +
	"\x10GetStatsResponse\x12\x1b\n" +
	"\tkey_count\x18\x01 \x01(\x03R\bkeyCount\x12!\n" +
	"\fstorage_size\x18\x02 \x01(\x03R\vstorageSize\x12%\n" +
	"\x0ememtable_count\x18\x03 \x01(\x05R\rmemtableCount\x12#\n" +
	"\rsstable_count\x18\x04 \x01(\x05R\fsstableCount\x12/\n" +
	"\x13write_amplification\x18\x05 \x01(\x01R\x12writeAmplification\x12-\n" +
	"\x12read_amplification\x18\x06 \x01(\x01R\x11readAmplification\x12V\n" +
	"\x10operation_counts\x18\a \x03(\v2+.kevo.GetStatsResponse.OperationCountsEntryR\x0foperationCounts\x12M\n" +
	"\rlatency_stats\x18\b \x03(\v2(.kevo.GetStatsResponse.LatencyStatsEntryR\flatencyStats\x12J\n" +
	"\ferror_counts\x18\t \x03(\v2'.kevo.GetStatsResponse.ErrorCountsEntryR\verrorCounts\x12(\n" +
	"\x10total_bytes_read\x18\n" +
	" \x01(\x03R\x0etotalBytesRead\x12.\n" +
	"\x13total_bytes_written\x18\v \x01(\x03R\x11totalBytesWritten\x12\x1f\n" +
	"\vflush_count\x18\f \x01(\x03R\n" +
	"flushCount\x12)\n" +
	"\x10compaction_count\x18\r \x01(\x03R\x0fcompactionCount\x12:\n" +
	"\x0erecovery_stats\x18\x0e \x01(\v2\x13.kevo.RecoveryStatsR\rrecoveryStats\x1aB\n" +
	"\x14OperationCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1aS\n" +
	"\x11LatencyStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.kevo.LatencyStatsR\x05value:\x028\x01\x1a>\n" +
	"\x10ErrorCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"i\n" +
	"\fLatencyStats\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x15\n" +
	"\x06avg_ns\x18\x02 \x01(\x04R\x05avgNs\x12\x15\n" +
	"\x06min_ns\x18\x03 \x01(\x04R\x05minNs\x12\x15\n" +
	"\x06max_ns\x18\x04 \x01(\x04R\x05maxNs\"\xe0\x01\n" +
	"\rRecoveryStats\x12.\n" +
	"\x13wal_files_recovered\x18\x01 \x01(\x04R\x11walFilesRecovered\x122\n" +
	"\x15wal_entries_recovered\x18\x02 \x01(\x04R\x13walEntriesRecovered\x122\n" +
	"\x15wal_corrupted_entries\x18\x03 \x01(\x04R\x13walCorruptedEntries\x127\n" +
	"\x18wal_recovery_duration_ms\x18\x04 \x01(\x03R\x15walRecoveryDurationMs\"&\n" +
	"\x0eCompactRequest\x12\x14\n" +
	"\x05force\x18\x01 \x01(\bR\x05force\"+\n" +
	"\x0fCompactResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xda\x06\n" +
	"\vKevoService\x12*\n" +
	"\x03Get\x12\x10.kevo.GetRequest\x1a\x11.kevo.GetResponse\x12*\n" +
	"\x03Put\x12\x10.kevo.PutRequest\x1a\x11.kevo.PutResponse\x123\n" +
	"\x06Delete\x12\x13.kevo.DeleteRequest\x1a\x14.kevo.DeleteResponse\x12?\n" +
	"\n" +
	"BatchWrite\x12\x17.kevo.BatchWriteRequest\x1a\x18.kevo.BatchWriteResponse\x12/\n" +
	"\x04Scan\x12\x11.kevo.ScanRequest\x1a\x12.kevo.ScanResponse0\x01\x12Q\n" +
	"\x10BeginTransaction\x12\x1d.kevo.BeginTransactionRequest\x1a\x1e.kevo.BeginTransactionResponse\x12T\n" +
	"\x11CommitTransaction\x12\x1e.kevo.CommitTransactionRequest\x1a\x1f.kevo.CommitTransactionResponse\x12Z\n" +
	"\x13RollbackTransaction\x12 .kevo.RollbackTransactionRequest\x1a!.kevo.RollbackTransactionResponse\x120\n" +
	"\x05TxGet\x12\x12.kevo.TxGetRequest\x1a\x13.kevo.TxGetResponse\x120\n" +
	"\x05TxPut\x12\x12.kevo.TxPutRequest\x1a\x13.kevo.TxPutResponse\x129\n" +
	"\bTxDelete\x12\x15.kevo.TxDeleteRequest\x1a\x16.kevo.TxDeleteResponse\x125\n" +
	"\x06TxScan\x12\x13.kevo.TxScanRequest\x1a\x14.kevo.TxScanResponse0\x01\x129\n" +
	"\bGetStats\x12\x15.kevo.GetStatsRequest\x1a\x16.kevo.GetStatsResponse\x126\n" +
	"\aCompact\x12\x14.kevo.CompactRequest\x1a\x15.kevo.CompactResponseB5Z3github.com/jeremytregunna/kevo/pkg/grpc/proto;protob\x06proto3"

var (
	file_proto_kevo_service_proto_rawDescOnce sync.Once
	file_proto_kevo_service_proto_rawDescData []byte
)

func file_proto_kevo_service_proto_rawDescGZIP() []byte {
	file_proto_kevo_service_proto_rawDescOnce.Do(func() {
		file_proto_kevo_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_kevo_service_proto_rawDesc), len(file_proto_kevo_service_proto_rawDesc)))
	})
	return file_proto_kevo_service_proto_rawDescData
}

var file_proto_kevo_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_kevo_service_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_proto_kevo_service_proto_goTypes = []any{
	(Operation_Type)(0),                 // 0: kevo.Operation.Type
	(*GetRequest)(nil),                  // 1: kevo.GetRequest
	(*GetResponse)(nil),                 // 2: kevo.GetResponse
	(*PutRequest)(nil),                  // 3: kevo.PutRequest
	(*PutResponse)(nil),                 // 4: kevo.PutResponse
	(*DeleteRequest)(nil),               // 5: kevo.DeleteRequest
	(*DeleteResponse)(nil),              // 6: kevo.DeleteResponse
	(*BatchWriteRequest)(nil),           // 7: kevo.BatchWriteRequest
	(*Operation)(nil),                   // 8: kevo.Operation
	(*BatchWriteResponse)(nil),          // 9: kevo.BatchWriteResponse
	(*ScanRequest)(nil),                 // 10: kevo.ScanRequest
	(*ScanResponse)(nil),                // 11: kevo.ScanResponse
	(*BeginTransactionRequest)(nil),     // 12: kevo.BeginTransactionRequest
	(*BeginTransactionResponse)(nil),    // 13: kevo.BeginTransactionResponse
	(*CommitTransactionRequest)(nil),    // 14: kevo.CommitTransactionRequest
	(*CommitTransactionResponse)(nil),   // 15: kevo.CommitTransactionResponse
	(*RollbackTransactionRequest)(nil),  // 16: kevo.RollbackTransactionRequest
	(*RollbackTransactionResponse)(nil), // 17: kevo.RollbackTransactionResponse
	(*TxGetRequest)(nil),                // 18: kevo.TxGetRequest
	(*TxGetResponse)(nil),               // 19: kevo.TxGetResponse
	(*TxPutRequest)(nil),                // 20: kevo.TxPutRequest
	(*TxPutResponse)(nil),               // 21: kevo.TxPutResponse
	(*TxDeleteRequest)(nil),             // 22: kevo.TxDeleteRequest
	(*TxDeleteResponse)(nil),            // 23: kevo.TxDeleteResponse
	(*TxScanRequest)(nil),               // 24: kevo.TxScanRequest
	(*TxScanResponse)(nil),              // 25: kevo.TxScanResponse
	(*GetStatsRequest)(nil),             // 26: kevo.GetStatsRequest
	(*GetStatsResponse)(nil),            // 27: kevo.GetStatsResponse
	(*LatencyStats)(nil),                // 28: kevo.LatencyStats
	(*RecoveryStats)(nil),               // 29: kevo.RecoveryStats
	(*CompactRequest)(nil),              // 30: kevo.CompactRequest
	(*CompactResponse)(nil),             // 31: kevo.CompactResponse
	nil,                                 // 32: kevo.GetStatsResponse.OperationCountsEntry
	nil,                                 // 33: kevo.GetStatsResponse.LatencyStatsEntry
	nil,                                 // 34: kevo.GetStatsResponse.ErrorCountsEntry
}
var file_proto_kevo_service_proto_depIdxs = []int32{
	8,  // 0: kevo.BatchWriteRequest.operations:type_name -> kevo.Operation
	0,  // 1: kevo.Operation.type:type_name -> kevo.Operation.Type
	32, // 2: kevo.GetStatsResponse.operation_counts:type_name -> kevo.GetStatsResponse.OperationCountsEntry
	33, // 3: kevo.GetStatsResponse.latency_stats:type_name -> kevo.GetStatsResponse.LatencyStatsEntry
	34, // 4: kevo.GetStatsResponse.error_counts:type_name -> kevo.GetStatsResponse.ErrorCountsEntry
	29, // 5: kevo.GetStatsResponse.recovery_stats:type_name -> kevo.RecoveryStats
	28, // 6: kevo.GetStatsResponse.LatencyStatsEntry.value:type_name -> kevo.LatencyStats
	1,  // 7: kevo.KevoService.Get:input_type -> kevo.GetRequest
	3,  // 8: kevo.KevoService.Put:input_type -> kevo.PutRequest
	5,  // 9: kevo.KevoService.Delete:input_type -> kevo.DeleteRequest
	7,  // 10: kevo.KevoService.BatchWrite:input_type -> kevo.BatchWriteRequest
	10, // 11: kevo.KevoService.Scan:input_type -> kevo.ScanRequest
	12, // 12: kevo.KevoService.BeginTransaction:input_type -> kevo.BeginTransactionRequest
	14, // 13: kevo.KevoService.CommitTransaction:input_type -> kevo.CommitTransactionRequest
	16, // 14: kevo.KevoService.RollbackTransaction:input_type -> kevo.RollbackTransactionRequest
	18, // 15: kevo.KevoService.TxGet:input_type -> kevo.TxGetRequest
	20, // 16: kevo.KevoService.TxPut:input_type -> kevo.TxPutRequest
	22, // 17: kevo.KevoService.TxDelete:input_type -> kevo.TxDeleteRequest
	24, // 18: kevo.KevoService.TxScan:input_type -> kevo.TxScanRequest
	26, // 19: kevo.KevoService.GetStats:input_type -> kevo.GetStatsRequest
	30, // 20: kevo.KevoService.Compact:input_type -> kevo.CompactRequest
	2,  // 21: kevo.KevoService.Get:output_type -> kevo.GetResponse
	4,  // 22: kevo.KevoService.Put:output_type -> kevo.PutResponse
	6,  // 23: kevo.KevoService.Delete:output_type -> kevo.DeleteResponse
	9,  // 24: kevo.KevoService.BatchWrite:output_type -> kevo.BatchWriteResponse
	11, // 25: kevo.KevoService.Scan:output_type -> kevo.ScanResponse
	13, // 26: kevo.KevoService.BeginTransaction:output_type -> kevo.BeginTransactionResponse
	15, // 27: kevo.KevoService.CommitTransaction:output_type -> kevo.CommitTransactionResponse
	17, // 28: kevo.KevoService.RollbackTransaction:output_type -> kevo.RollbackTransactionResponse
	19, // 29: kevo.KevoService.TxGet:output_type -> kevo.TxGetResponse
	21, // 30: kevo.KevoService.TxPut:output_type -> kevo.TxPutResponse
	23, // 31: kevo.KevoService.TxDelete:output_type -> kevo.TxDeleteResponse
	25, // 32: kevo.KevoService.TxScan:output_type -> kevo.TxScanResponse
	27, // 33: kevo.KevoService.GetStats:output_type -> kevo.GetStatsResponse
	31, // 34: kevo.KevoService.Compact:output_type -> kevo.CompactResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_kevo_service_proto_init() }
func file_proto_kevo_service_proto_init() {
	if File_proto_kevo_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_kevo_service_proto_rawDesc), len(file_proto_kevo_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_kevo_service_proto_goTypes,
		DependencyIndexes: file_proto_kevo_service_proto_depIdxs,
		EnumInfos:         file_proto_kevo_service_proto_enumTypes,
		MessageInfos:      file_proto_kevo_service_proto_msgTypes,
	}.Build()
	File_proto_kevo_service_proto = out.File
	file_proto_kevo_service_proto_goTypes = nil
	file_proto_kevo_service_proto_depIdxs = nil
}
